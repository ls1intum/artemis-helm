# Default values for artemis.

# Sepcify the Artemis verion - This value is used as docker image tag, so also "pr-1234" is a valid value here. See https://github.com/ls1intum/Artemis/pkgs/container/artemis/versions
artemisVersion: "5.5.7"

application: 
  userManagement: 

    # Initial Artemis admin account
    internalAdmin: 
      username: 
      password:
   
    # Set true if external user management shoule be enabled
    useExternal: false

    # Configure the user management provider. Valid values are "" and "jira"
    provider: ""

    jira: 
      url: ""
      username: ""
      password: ""

      # The specified Jira group will have administrator access to Artemis
      adminGroupName: ""


  versioncontrol: 
    # Configure version control provider. Valid values are "" and "bitbucket"
    provider: ""

    defaultBranch: main 

    # Bitbucket is only supported in conjungtion with jira usermanagement 
    bitbucket: 
      url: 

      # SSH clone url - Make sure that this url ends with a /
      sshCloneUrl: 

      # Artemis user access token in Bitbucket
      token: 

  registry: 
    jwt: 
    password: "SuperSecure"

  continuousIntegration: 

    # Configure CI provider. Valid values are "" and "bamboo"
    provider: ""

    # Bamboo is only supported in conjungtion with jira usermanagement 
    bamboo: 
      url:

      # Access token for the Artemis bamboo user 
      accessToken: 

      # Token used by the Artemis Bamboo plugin to send results to Artemis 
      notificationToken: 
      applicationLinkName: 
      




# Configuration for the artemis application server - This abstraction layer is introduced to support the planned micro-service architecture in the future. 
artemis:
  # Currently we only support 1 replica of artemis. This will change in the future
  replicaCount: 1

  image:
    repository: "ghcr.io/ls1intum/"
    name: "artemis"
    pullPolicy: Always

  podAnnotations: {}

  podSecurityContext: 
    allowPrivilegeEscalation: false

  securityContext: {}

  service:
    type: ClusterIP
    port: 8080

  ingress:
    enabled: true
    className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: example.com 
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  volumes: 
    name: artemis-pvc
    accessModes: 
      - ReadWriteOnce
    size: 3Gi 
    storageClassName:
    mountPath: "/artemisdata"


  resources: {}

  nodeSelector: {}

  tolerations: []

  affinity: {}


registry:
  replicaCount: 1

  image:
    # Leave empty to use the official image
    repository: ""
    name: "jhipster/jhipster-registry"
    version: "v7.3.0"
    pullPolicy: Always

      #podAnnotations: {}

  service: 
    name: jhipster-registry-service
    type: ClusterIP
    port: 8761
