# Default values for artemis.

# Sepcify the Artemis verion - This value is used as docker image tag, so also "pr-1234" is a valid value here. See https://github.com/ls1intum/Artemis/pkgs/container/artemis/versions
artemisVersion: "5.5.7"

# Configuration for the artemis application server - This abstraction layer is introduced to support the planned micro-service architecture in the future. 
artemis:
  # Currently we only support 1 replica of artemis. This will change in the future
  replicaCount: 1

  image:
    repository: "ghcr.io/ls1intum/"
    name: "artemis"
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  serviceAccount:
    # Specifies whether a service account should be created
    create: false
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  podAnnotations: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  service:
    type: ClusterIP
    port: 80

  ingress:
    enabled: false
    className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

    #autoscaling:
    #  enabled: false
    #  minReplicas: 1
    #  maxReplicas: 100
    #  targetCPUUtilizationPercentage: 80
    #  # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}
